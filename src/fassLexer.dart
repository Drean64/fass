// Generated from /Users/petruza/Source/Drean64/fass/src/fass.g4 by ANTLR 4.11.1
// ignore_for_file: unused_import, unused_local_variable, prefer_single_quotes
import 'package:antlr4/antlr4.dart';


class fassLexer extends Lexer {
  static final checkVersion = () => RuntimeMetaData.checkVersion('4.11.1', RuntimeMetaData.VERSION);

  static final List<DFA> _decisionToDFA = List.generate(
        _ATN.numberOfDecisions, (i) => DFA(_ATN.getDecisionState(i), i));
  static final PredictionContextCache _sharedContextCache = PredictionContextCache();
  static const int
    TOKEN_T__0 = 1, TOKEN_T__1 = 2, TOKEN_T__2 = 3, TOKEN_T__3 = 4, TOKEN_T__4 = 5, 
    TOKEN_T__5 = 6, TOKEN_T__6 = 7, TOKEN_T__7 = 8, TOKEN_HEXADECIMAL = 9, 
    TOKEN_BINARY = 10, TOKEN_DECIMAL = 11, TOKEN_NEGATIVE_NUMBER = 12, TOKEN_BRK = 13, 
    TOKEN_NOP = 14, TOKEN_NOP3 = 15, TOKEN_ADDRESS_KWD = 16, TOKEN_FILLER_KWD = 17, 
    TOKEN_DEFAULT_KWD = 18, TOKEN_DATA_KWD = 19, TOKEN_CONST_KWD = 20, TOKEN_IF_KWD = 21, 
    TOKEN_THEN_KWD = 22, TOKEN_ELSE_KWD = 23, TOKEN_GOTO_KWD = 24, TOKEN_GOSUB_KWD = 25, 
    TOKEN_RETURN_KWD = 26, TOKEN_RETINT_KWD = 27, TOKEN_PUSH_KWD = 28, TOKEN_PULL_KWD = 29, 
    TOKEN_FLAGS_KWD = 30, TOKEN_AND_KWD = 31, TOKEN_OR_KWD = 32, TOKEN_XOR_KWD = 33, 
    TOKEN_BITTEST_KWD = 34, TOKEN_COMPARE_KWD = 35, TOKEN_ROTATE_KWD = 36, 
    TOKEN_SHIFT_KWD = 37, TOKEN_ROL_KWD = 38, TOKEN_ROR_KWD = 39, TOKEN_ASL_KWD = 40, 
    TOKEN_LSR_KWD = 41, TOKEN_CARRY = 42, TOKEN_OVERFLOW = 43, TOKEN_INTERRUPT = 44, 
    TOKEN_DECIMAL_MODE = 45, TOKEN_NOT = 46, TOKEN_ZERO = 47, TOKEN_POSITIVE = 48, 
    TOKEN_NEGATIVE = 49, TOKEN_EQUAL = 50, TOKEN_ON = 51, TOKEN_OFF = 52, 
    TOKEN_A = 53, TOKEN_X = 54, TOKEN_Y = 55, TOKEN_STACK = 56, TOKEN_IDENTIFIER = 57, 
    TOKEN_WHITESPACE = 58, TOKEN_EOL = 59;
  @override
  final List<String> channelNames = [
    'DEFAULT_TOKEN_CHANNEL', 'HIDDEN'
  ];

  @override
  final List<String> modeNames = [
    'DEFAULT_MODE'
  ];

  @override
  final List<String> ruleNames = [
    'T__0', 'T__1', 'T__2', 'T__3', 'T__4', 'T__5', 'T__6', 'T__7', 'HEXADECIMAL', 
    'BINARY', 'DECIMAL', 'NEGATIVE_NUMBER', 'BRK', 'NOP', 'NOP3', 'ADDRESS_KWD', 
    'FILLER_KWD', 'DEFAULT_KWD', 'DATA_KWD', 'CONST_KWD', 'IF_KWD', 'THEN_KWD', 
    'ELSE_KWD', 'GOTO_KWD', 'GOSUB_KWD', 'RETURN_KWD', 'RETINT_KWD', 'PUSH_KWD', 
    'PULL_KWD', 'FLAGS_KWD', 'AND_KWD', 'OR_KWD', 'XOR_KWD', 'BITTEST_KWD', 
    'COMPARE_KWD', 'ROTATE_KWD', 'SHIFT_KWD', 'ROL_KWD', 'ROR_KWD', 'ASL_KWD', 
    'LSR_KWD', 'CARRY', 'OVERFLOW', 'INTERRUPT', 'DECIMAL_MODE', 'NOT', 
    'ZERO', 'POSITIVE', 'NEGATIVE', 'EQUAL', 'ON', 'OFF', 'A', 'X', 'Y', 
    'STACK', 'IDENTIFIER', 'WHITESPACE', 'EOL'
  ];

  static final List<String?> _LITERAL_NAMES = [
      null, "':'", "'at'", "'='", "','", "'('", "')'", "'['", "']'"
  ];
  static final List<String?> _SYMBOLIC_NAMES = [
      null, null, null, null, null, null, null, null, null, "HEXADECIMAL", 
      "BINARY", "DECIMAL", "NEGATIVE_NUMBER", "BRK", "NOP", "NOP3", "ADDRESS_KWD", 
      "FILLER_KWD", "DEFAULT_KWD", "DATA_KWD", "CONST_KWD", "IF_KWD", "THEN_KWD", 
      "ELSE_KWD", "GOTO_KWD", "GOSUB_KWD", "RETURN_KWD", "RETINT_KWD", "PUSH_KWD", 
      "PULL_KWD", "FLAGS_KWD", "AND_KWD", "OR_KWD", "XOR_KWD", "BITTEST_KWD", 
      "COMPARE_KWD", "ROTATE_KWD", "SHIFT_KWD", "ROL_KWD", "ROR_KWD", "ASL_KWD", 
      "LSR_KWD", "CARRY", "OVERFLOW", "INTERRUPT", "DECIMAL_MODE", "NOT", 
      "ZERO", "POSITIVE", "NEGATIVE", "EQUAL", "ON", "OFF", "A", "X", "Y", 
      "STACK", "IDENTIFIER", "WHITESPACE", "EOL"
  ];
  static final Vocabulary VOCABULARY = VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

  @override
  Vocabulary get vocabulary {
    return VOCABULARY;
  }


  fassLexer(CharStream input) : super(input) {
    interpreter = LexerATNSimulator(_ATN, _decisionToDFA, _sharedContextCache, recog: this);
  }

  @override
  List<int> get serializedATN => _serializedATN;

  @override
  String get grammarFileName => 'fass.g4';

  @override
  ATN getATN() { return _ATN; }

  static const List<int> _serializedATN = [
      4,0,59,419,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
      6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,
      13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,
      7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
      27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,
      2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,
      40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,
      7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,
      54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,1,0,1,0,1,1,1,1,1,
      1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,4,8,139,
      8,8,11,8,12,8,140,1,9,1,9,4,9,145,8,9,11,9,12,9,146,1,10,4,10,150,
      8,10,11,10,12,10,151,1,11,1,11,4,11,156,8,11,11,11,12,11,157,1,12,
      1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,
      15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
      1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,
      19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,
      1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,
      24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
      1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,
      29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,
      1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
      33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,
      1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,
      38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,
      1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,
      43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,
      1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,
      47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,
      1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,
      52,1,53,1,53,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,5,56,
      403,8,56,10,56,12,56,406,9,56,1,57,4,57,409,8,57,11,57,12,57,410,1,
      57,1,57,1,58,3,58,416,8,58,1,58,1,58,0,0,59,1,1,3,2,5,3,7,4,9,5,11,
      6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
      18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
      29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,
      40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
      51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,1,0,31,
      3,0,48,57,65,70,97,102,1,0,48,49,1,0,48,57,2,0,66,66,98,98,2,0,82,
      82,114,114,2,0,75,75,107,107,2,0,78,78,110,110,2,0,79,79,111,111,2,
      0,80,80,112,112,2,0,65,65,97,97,2,0,68,68,100,100,2,0,69,69,101,101,
      2,0,83,83,115,115,2,0,70,70,102,102,2,0,73,73,105,105,2,0,76,76,108,
      108,2,0,85,85,117,117,2,0,84,84,116,116,2,0,67,67,99,99,2,0,72,72,
      104,104,2,0,71,71,103,103,2,0,88,88,120,120,2,0,77,77,109,109,2,0,
      89,89,121,121,2,0,86,86,118,118,2,0,87,87,119,119,2,0,90,90,122,122,
      2,0,81,81,113,113,3,0,65,90,95,95,97,122,5,0,46,46,48,57,65,90,95,
      95,97,122,2,0,9,9,32,32,425,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
      7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
      1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
      0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
      0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
      0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
      0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,
      69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
      1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,
      0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,
      0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
      1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,1,
      119,1,0,0,0,3,121,1,0,0,0,5,124,1,0,0,0,7,126,1,0,0,0,9,128,1,0,0,
      0,11,130,1,0,0,0,13,132,1,0,0,0,15,134,1,0,0,0,17,136,1,0,0,0,19,142,
      1,0,0,0,21,149,1,0,0,0,23,153,1,0,0,0,25,159,1,0,0,0,27,163,1,0,0,
      0,29,167,1,0,0,0,31,172,1,0,0,0,33,180,1,0,0,0,35,187,1,0,0,0,37,195,
      1,0,0,0,39,200,1,0,0,0,41,206,1,0,0,0,43,209,1,0,0,0,45,214,1,0,0,
      0,47,219,1,0,0,0,49,224,1,0,0,0,51,230,1,0,0,0,53,237,1,0,0,0,55,244,
      1,0,0,0,57,249,1,0,0,0,59,254,1,0,0,0,61,260,1,0,0,0,63,265,1,0,0,
      0,65,269,1,0,0,0,67,274,1,0,0,0,69,282,1,0,0,0,71,290,1,0,0,0,73,297,
      1,0,0,0,75,303,1,0,0,0,77,306,1,0,0,0,79,309,1,0,0,0,81,312,1,0,0,
      0,83,315,1,0,0,0,85,321,1,0,0,0,87,330,1,0,0,0,89,340,1,0,0,0,91,348,
      1,0,0,0,93,352,1,0,0,0,95,357,1,0,0,0,97,366,1,0,0,0,99,375,1,0,0,
      0,101,381,1,0,0,0,103,384,1,0,0,0,105,388,1,0,0,0,107,390,1,0,0,0,
      109,392,1,0,0,0,111,394,1,0,0,0,113,400,1,0,0,0,115,408,1,0,0,0,117,
      415,1,0,0,0,119,120,5,58,0,0,120,2,1,0,0,0,121,122,5,97,0,0,122,123,
      5,116,0,0,123,4,1,0,0,0,124,125,5,61,0,0,125,6,1,0,0,0,126,127,5,44,
      0,0,127,8,1,0,0,0,128,129,5,40,0,0,129,10,1,0,0,0,130,131,5,41,0,0,
      131,12,1,0,0,0,132,133,5,91,0,0,133,14,1,0,0,0,134,135,5,93,0,0,135,
      16,1,0,0,0,136,138,5,36,0,0,137,139,7,0,0,0,138,137,1,0,0,0,139,140,
      1,0,0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,18,1,0,0,0,142,144,5,37,
      0,0,143,145,7,1,0,0,144,143,1,0,0,0,145,146,1,0,0,0,146,144,1,0,0,
      0,146,147,1,0,0,0,147,20,1,0,0,0,148,150,7,2,0,0,149,148,1,0,0,0,150,
      151,1,0,0,0,151,149,1,0,0,0,151,152,1,0,0,0,152,22,1,0,0,0,153,155,
      5,45,0,0,154,156,7,2,0,0,155,154,1,0,0,0,156,157,1,0,0,0,157,155,1,
      0,0,0,157,158,1,0,0,0,158,24,1,0,0,0,159,160,7,3,0,0,160,161,7,4,0,
      0,161,162,7,5,0,0,162,26,1,0,0,0,163,164,7,6,0,0,164,165,7,7,0,0,165,
      166,7,8,0,0,166,28,1,0,0,0,167,168,7,6,0,0,168,169,7,7,0,0,169,170,
      7,8,0,0,170,171,5,51,0,0,171,30,1,0,0,0,172,173,7,9,0,0,173,174,7,
      10,0,0,174,175,7,10,0,0,175,176,7,4,0,0,176,177,7,11,0,0,177,178,7,
      12,0,0,178,179,7,12,0,0,179,32,1,0,0,0,180,181,7,13,0,0,181,182,7,
      14,0,0,182,183,7,15,0,0,183,184,7,15,0,0,184,185,7,11,0,0,185,186,
      7,4,0,0,186,34,1,0,0,0,187,188,7,10,0,0,188,189,7,11,0,0,189,190,7,
      13,0,0,190,191,7,9,0,0,191,192,7,16,0,0,192,193,7,15,0,0,193,194,7,
      17,0,0,194,36,1,0,0,0,195,196,7,10,0,0,196,197,7,9,0,0,197,198,7,17,
      0,0,198,199,7,9,0,0,199,38,1,0,0,0,200,201,7,18,0,0,201,202,7,7,0,
      0,202,203,7,6,0,0,203,204,7,12,0,0,204,205,7,17,0,0,205,40,1,0,0,0,
      206,207,7,14,0,0,207,208,7,13,0,0,208,42,1,0,0,0,209,210,7,17,0,0,
      210,211,7,19,0,0,211,212,7,11,0,0,212,213,7,6,0,0,213,44,1,0,0,0,214,
      215,7,11,0,0,215,216,7,15,0,0,216,217,7,12,0,0,217,218,7,11,0,0,218,
      46,1,0,0,0,219,220,7,20,0,0,220,221,7,7,0,0,221,222,7,17,0,0,222,223,
      7,7,0,0,223,48,1,0,0,0,224,225,7,20,0,0,225,226,7,7,0,0,226,227,7,
      12,0,0,227,228,7,16,0,0,228,229,7,3,0,0,229,50,1,0,0,0,230,231,7,4,
      0,0,231,232,7,11,0,0,232,233,7,17,0,0,233,234,7,16,0,0,234,235,7,4,
      0,0,235,236,7,6,0,0,236,52,1,0,0,0,237,238,7,4,0,0,238,239,7,11,0,
      0,239,240,7,17,0,0,240,241,7,14,0,0,241,242,7,6,0,0,242,243,7,17,0,
      0,243,54,1,0,0,0,244,245,7,8,0,0,245,246,7,16,0,0,246,247,7,12,0,0,
      247,248,7,19,0,0,248,56,1,0,0,0,249,250,7,8,0,0,250,251,7,16,0,0,251,
      252,7,15,0,0,252,253,7,15,0,0,253,58,1,0,0,0,254,255,7,13,0,0,255,
      256,7,15,0,0,256,257,7,9,0,0,257,258,7,20,0,0,258,259,7,12,0,0,259,
      60,1,0,0,0,260,261,7,9,0,0,261,262,7,6,0,0,262,263,7,10,0,0,263,264,
      5,61,0,0,264,62,1,0,0,0,265,266,7,7,0,0,266,267,7,4,0,0,267,268,5,
      61,0,0,268,64,1,0,0,0,269,270,7,21,0,0,270,271,7,7,0,0,271,272,7,4,
      0,0,272,273,5,61,0,0,273,66,1,0,0,0,274,275,7,3,0,0,275,276,7,14,0,
      0,276,277,7,17,0,0,277,278,7,17,0,0,278,279,7,11,0,0,279,280,7,12,
      0,0,280,281,7,17,0,0,281,68,1,0,0,0,282,283,7,18,0,0,283,284,7,7,0,
      0,284,285,7,22,0,0,285,286,7,8,0,0,286,287,7,9,0,0,287,288,7,4,0,0,
      288,289,7,11,0,0,289,70,1,0,0,0,290,291,7,4,0,0,291,292,7,7,0,0,292,
      293,7,17,0,0,293,294,7,9,0,0,294,295,7,17,0,0,295,296,7,11,0,0,296,
      72,1,0,0,0,297,298,7,12,0,0,298,299,7,19,0,0,299,300,7,14,0,0,300,
      301,7,13,0,0,301,302,7,17,0,0,302,74,1,0,0,0,303,304,3,71,35,0,304,
      305,5,60,0,0,305,76,1,0,0,0,306,307,3,71,35,0,307,308,5,62,0,0,308,
      78,1,0,0,0,309,310,3,73,36,0,310,311,5,60,0,0,311,80,1,0,0,0,312,313,
      3,73,36,0,313,314,5,62,0,0,314,82,1,0,0,0,315,316,7,18,0,0,316,317,
      7,9,0,0,317,318,7,4,0,0,318,319,7,4,0,0,319,320,7,23,0,0,320,84,1,
      0,0,0,321,322,7,7,0,0,322,323,7,24,0,0,323,324,7,11,0,0,324,325,7,
      4,0,0,325,326,7,13,0,0,326,327,7,15,0,0,327,328,7,7,0,0,328,329,7,
      25,0,0,329,86,1,0,0,0,330,331,7,14,0,0,331,332,7,6,0,0,332,333,7,17,
      0,0,333,334,7,11,0,0,334,335,7,4,0,0,335,336,7,4,0,0,336,337,7,16,
      0,0,337,338,7,8,0,0,338,339,7,17,0,0,339,88,1,0,0,0,340,341,7,10,0,
      0,341,342,7,11,0,0,342,343,7,18,0,0,343,344,7,14,0,0,344,345,7,22,
      0,0,345,346,7,9,0,0,346,347,7,15,0,0,347,90,1,0,0,0,348,349,7,6,0,
      0,349,350,7,7,0,0,350,351,7,17,0,0,351,92,1,0,0,0,352,353,7,26,0,0,
      353,354,7,11,0,0,354,355,7,4,0,0,355,356,7,7,0,0,356,94,1,0,0,0,357,
      358,7,8,0,0,358,359,7,7,0,0,359,360,7,12,0,0,360,361,7,14,0,0,361,
      362,7,17,0,0,362,363,7,14,0,0,363,364,7,24,0,0,364,365,7,11,0,0,365,
      96,1,0,0,0,366,367,7,6,0,0,367,368,7,11,0,0,368,369,7,20,0,0,369,370,
      7,9,0,0,370,371,7,17,0,0,371,372,7,14,0,0,372,373,7,24,0,0,373,374,
      7,11,0,0,374,98,1,0,0,0,375,376,7,11,0,0,376,377,7,27,0,0,377,378,
      7,16,0,0,378,379,7,9,0,0,379,380,7,15,0,0,380,100,1,0,0,0,381,382,
      7,7,0,0,382,383,7,6,0,0,383,102,1,0,0,0,384,385,7,7,0,0,385,386,7,
      13,0,0,386,387,7,13,0,0,387,104,1,0,0,0,388,389,7,9,0,0,389,106,1,
      0,0,0,390,391,7,21,0,0,391,108,1,0,0,0,392,393,7,23,0,0,393,110,1,
      0,0,0,394,395,7,12,0,0,395,396,7,17,0,0,396,397,7,9,0,0,397,398,7,
      18,0,0,398,399,7,5,0,0,399,112,1,0,0,0,400,404,7,28,0,0,401,403,7,
      29,0,0,402,401,1,0,0,0,403,406,1,0,0,0,404,402,1,0,0,0,404,405,1,0,
      0,0,405,114,1,0,0,0,406,404,1,0,0,0,407,409,7,30,0,0,408,407,1,0,0,
      0,409,410,1,0,0,0,410,408,1,0,0,0,410,411,1,0,0,0,411,412,1,0,0,0,
      412,413,6,57,0,0,413,116,1,0,0,0,414,416,5,13,0,0,415,414,1,0,0,0,
      415,416,1,0,0,0,416,417,1,0,0,0,417,418,5,10,0,0,418,118,1,0,0,0,8,
      0,140,146,151,157,404,410,415,1,6,0,0
  ];

  static final ATN _ATN =
      ATNDeserializer().deserialize(_serializedATN);
}